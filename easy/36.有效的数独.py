from typing import List

class Solution:
    def isValidSudoku(self, board: List[List[str]]) -> bool:
        num_dict_origin = {'.':10, '1':1, '2':1, '3':1, '4':1, '5':1, '6':1, '7':1, '8':1, '9':1}
        # 行
        for row in board:
            num_dict = num_dict_origin.copy()
            for col in row:
                if num_dict[col] > 0: 
                    num_dict[col] -= 1
                else:
                    return False
        # 列
        for c in range(len(board[0])):
            num_dict = num_dict_origin.copy()
            for r in range(len(board)):
                val = board[r][c]
                if num_dict[val] > 0:
                    num_dict[val] -= 1
                else:
                    return False
        # 3x3
        for R in range(len(board)//3):
            for C in range(len(board[0])//3):
                num_dict = num_dict_origin.copy()
                for r in range(3):
                    for c in range(3):
                        val = board[R*3+r][C*3+c]
                        if num_dict[val] > 0:
                            num_dict[val] -= 1
                        else:
                            return False
        return True



if __name__ == "__main__":
    board_list = [
        [
            ["5","3",".",".","7",".",".",".","."],
            ["6",".",".","1","9","5",".",".","."],
            [".","9","8",".",".",".",".","6","."],
            ["8",".",".",".","6",".",".",".","3"],
            ["4",".",".","8",".","3",".",".","1"],
            ["7",".",".",".","2",".",".",".","6"],
            [".","6",".",".",".",".","2","8","."],
            [".",".",".","4","1","9",".",".","5"],
            [".",".",".",".","8",".",".","7","9"]
        ],
        [
            ["8","3",".",".","7",".",".",".","."],
            ["6",".",".","1","9","5",".",".","."],
            [".","9","8",".",".",".",".","6","."],
            ["8",".",".",".","6",".",".",".","3"],
            ["4",".",".","8",".","3",".",".","1"],
            ["7",".",".",".","2",".",".",".","6"],
            [".","6",".",".",".",".","2","8","."],
            [".",".",".","4","1","9",".",".","5"],
            [".",".",".",".","8",".",".","7","9"]
        ],
        [
            [".",".",".",".","5",".",".","1","."],
            [".","4",".","3",".",".",".",".","."],
            [".",".",".",".",".","3",".",".","1"],
            ["8",".",".",".",".",".",".","2","."],
            [".",".","2",".","7",".",".",".","."],
            [".","1","5",".",".",".",".",".","."],
            [".",".",".",".",".","2",".",".","."],
            [".","2",".","9",".",".",".",".","."],
            [".",".","4",".",".",".",".",".","."]
        ],
    ]

    for board in board_list:
        print(Solution().isValidSudoku(board))
